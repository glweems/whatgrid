scalar DateTime
scalar Id
scalar Boolean

type Query {
  grids: [Grid!]!
  grid(id: ID!): Grid
  user(id: ID, email: String): User
  users(searchString: String): [User!]!
  me: User
}

type Mutation {
  signup(
    email: String!
    password: String!
    username: String
    firstName: String
    lastName: String
    phoneNumber: String
  ): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  logout: SuccessMessage
}

type SuccessMessage {
  message: String
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  email: String!
  firstName: String
  lastName: String
  username: String
  phoneNumber: String
  createdAt: DateTime!
  updatedAt: DateTime!
  password: String
  grids: [Grid]
}

type Grid {
  id: ID!
  name: String!
  entries: [GridEntry]!
  author: User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GridEntry {
  id: String!
  type: GridEntryType!
  amount: String!
  unit: String!
}

enum GridEntryType {
  Column
  Row
}
