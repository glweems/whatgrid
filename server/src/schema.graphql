scalar DateTime
scalar Id
scalar Boolean

type Query {
  grids: [Grid!]!
  grid(id: ID!): Grid
  user(id: ID, email: String): User
  users(searchString: String): [User!]!
  me: User
}

type Mutation {
  signup(email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  logout: SuccessMessage
}

type Permissions {
  authenticated: Boolean!
  user: User
}

type UserPermissions {
  owner: Boolean!
  edit: Boolean!
}

type SuccessMessage {
  message: String
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  permissions: UserPermissions!
  createdAt: DateTime!
  updatedAt: DateTime!
  email: String!
  name: String
  password: String
  firstName: String
  lastName: String
  username: String
  phoneNumber: Int
  grids: [Grid!]!
}

type Grid {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  published: Boolean!
  name: String
  rows: Int
  columns: Int
  gridTemplateColumns: String
  gridTemplateRows: String
  author: User!
}
